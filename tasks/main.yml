---

- name: Setup acme-tiny and certificate request
  become: True
  include: setup.yml
  when: not ansible_user == acme_tiny__user_name

- name: Run acme-tiny
  become: True
  become_user: '{{ acme_tiny__user_name }}'
  shell: 'acme-tiny --account-key {{ acme_tiny__config_dir }}/{{ acme_tiny__account_key }} --csr {{ acme_tiny__cert_request }} --acme-dir {{ acme_tiny__challenge_dir }} > {{ acme_tiny__certificate }}'
  register: acme_tiny__register_certificate
  failed_when: False

- name: Show acme-tiny output
  debug: var=acme_tiny__register_certificate
  when: not ansible_check_mode|d()
  failed_when: ("rc" in acme_tiny__register_certificate) and
               (not acme_tiny__register_certificate.rc == 0)

- name: Certificate permissions
  file:
    path: '{{ acme_tiny__certificate }}'
    owner: '{{ acme_tiny__user_name }}'
    group: '{{ acme_tiny__user_group }}'
    mode: '0644'

- name: Merge certificate/key to PEM file
  become: True
  become_user: '{{ acme_tiny__user_name }}'
  shell: 'cat {{ acme_tiny__private_key }} {{ acme_tiny__certificate }} > {{ acme_tiny__cert_dir }}/{{ acme_tiny__cert_name }}_keycert.pem'
  register: acme_tiny__register_keycert
  when: (item in acme_tiny__service_map|d({})) and
        ("cert_format" in acme_tiny__service_map[item]) and
        (acme_tiny__service_map[item].cert_format == "keycert") and
        (acme_tiny__register_certificate | changed)
  with_items: '{{ acme_tiny__service
                  if acme_tiny__service is iterable and not acme_tiny__service is string
                  else [ acme_tiny__service ] }}'

- name: Fix PEM file permissions
  file:
    path: '{{ acme_tiny__cert_dir }}/{{ acme_tiny__cert_name }}_keycert.pem'
    mode: '0600'
  when: (item in acme_tiny__service_map|d({})) and
        ("cert_format" in acme_tiny__service_map[item]) and
        (acme_tiny__service_map[item].cert_format == "keycert")
  with_items: '{{ acme_tiny__service
                  if acme_tiny__service is iterable and not acme_tiny__service is string
                  else [ acme_tiny__service ] }}'

- name: Merge certificate chain
  become: True
  become_user: '{{ acme_tiny__user_name }}'
  shell: 'cat {{ acme_tiny__certificate }} {{ acme_tiny__config_dir }}/{intermediate.crt,ca.crt} > {{ acme_tiny__cert_dir }}/{{ acme_tiny__cert_name }}_chain.crt'
  when: (item in acme_tiny__service_map|d({})) and
        ("cert_format" in acme_tiny__service_map[item]) and
        (acme_tiny__service_map[item].cert_format == "chain")
  with_items: '{{ acme_tiny__service
                  if acme_tiny__service is iterable and not acme_tiny__service is string
                  else [ acme_tiny__service ] }}'

- name: Restart service
  command: '{{ acme_tiny__service_map[item].restart_command }}'
  register: acme_tiny__register_service_restart
  when: (item in acme_tiny__service_map|d({})) and
        ("restart_command" in acme_tiny__service_map[item]) and
        (acme_tiny__register_certificate | changed) and
        (acme_tiny__service_restart|d(True))
  with_items: '{{ acme_tiny__service
                  if acme_tiny__service is iterable and not acme_tiny__service is string
                  else [ acme_tiny__service ] }}'
